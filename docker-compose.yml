version: '3.7'

services:
  webapp:
    depends_on:
      - db
      - assets
    build:
      context: .
      target: runalyze_php
      args:
        BUILDKIT_INLINE_CACHE: 1
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/runalyze/
      - ignore_var:/var/www/runalyze/var
      - ignore_vendor:/var/www/runalyze/vendor
      - ./vendor:/tmp/vendor
    restart: unless-stopped
  db:
    image: mariadb:10.11.2
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: runalyze
      MYSQL_USER: runalyze
      MYSQL_PASSWORD: password
    ports:
      - 3307:3306
    volumes:
      - db_data:/var/lib/mysql
    restart: unless-stopped
  phpmyadmin:
    image: phpmyadmin:5.2.1
    depends_on:
      - db
    ports:
      - 8002:80
    environment:
      - PMA_HOST=db
      - PMA_QUERYHISTORYDB=true
      - UPLOAD_LIMIT=512M
    restart: unless-stopped
  assets:
    build:
      context: .
      target: runalyze_assets
      args:
        BUILDKIT_INLINE_CACHE: 1
    user: "node"
    command: sh -c 'npm install && ./node_modules/.bin/gulp'
    working_dir: /home/node/app
    volumes:
      - ./:/home/node/app

###> doctrine/doctrine-bundle ###
  # database:
  #   image: postgres:${POSTGRES_VERSION:-15}-alpine
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB:-app}
  #     # You should definitely change the password in production
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
  #     POSTGRES_USER: ${POSTGRES_USER:-app}
  #   volumes:
  #     - database_data:/var/lib/postgresql/data:rw
  #     # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
  #     # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  db_data:
  ignore_var:
  ignore_vendor:
###> doctrine/doctrine-bundle ###
  # database_data:
###< doctrine/doctrine-bundle ###
