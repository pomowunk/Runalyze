parameters:
  container.autowiring.strict_mode: true # enable the upcoming stricter autowiring 

sensio_framework_extra:
  request:
    converters: true
    auto_convert: false
  router:
    annotations: false

services:
  _defaults:
    autowire: true
    autoconfigure: true
    public: false
    bind:
      $databasePrefix: '%database_prefix%'
      $defaultLocale: '%kernel.default_locale%'
      $feedbackMail: '%feedback_mail%'
      $runalyzeVersion: '%RUNALYZE_VERSION%'
      $userCanRegister: '%user_can_register%'
      $userDisableAccountActivation: '%user_disable_account_activation%'
      $backupStoragePeriod: '%backup_storage_period%'
      $posterStoragePeriod: '%poster_storage_period%'
      $dataDirectory: '%data_directory%'
      $kernelRootDir: '%kernel.root_dir%'
      $legacyCachePath: '%data_directory%'
      $projectDirectory: '%kernel.project_dir%'
      $srtmDirectory: "%data_directory%/srtm"
      $inkscapePath: '%inkscape_path%'
      $pathToFitPerlScript: "%kernel.project_dir%/call/perl/fittorunalyze.pl"
      $pathToPerl: "%perl_path%"
      $pathToTtbincnv: "%kernel.project_dir%/app/%ttbin_path%"
      $python3Path: '%python3_path%'
      $rsvgPath: '%rsvg_path%'
      $spatialiteExtensionName: "%sqlite_mod_spatialite%"
      $timezoneDatabasePath: "%data_directory%/timezone.sqlite"
      $darkSkyApiKey: "%darksky_api_key%"
      $garminApiKey: "%garmin_api_key%"
      $geonamesUsername: "%geonames_username%"
      $openWeatherMapApiKey: "%openweathermap_api_key%"

  Doctrine\ORM\EntityManager:
    alias: doctrine.orm.default_entity_manager
    public: false

  GuzzleHttp\Client: ~

  Monolog\Formatter\LineFormatter:
    arguments:
      - "[%%datetime%%] [%%extra.token%%] %%channel%%.%%level_name%%: %%message%% %%context%% %%extra%%\n"

  Runalyze\Bundle\CoreBundle\:
    resource: '../../src/CoreBundle/*'
    exclude: '../../src/CoreBundle/{Entity,Controller}'

  Runalyze\Bundle\CoreBundle\ArgumentResolver\AccountValueResolver:
    autoconfigure: false
    tags: [ {name: controller.argument_value_resolver, priority: 50} ]

  Runalyze\Bundle\CoreBundle\Controller\:
    resource: '%kernel.project_dir%/src/CoreBundle/Controller/*'
    public: true
    tags: ['controller.service_arguments']

  Runalyze\Bundle\CoreBundle\EntityListener\:
    resource: '%kernel.project_dir%/src/CoreBundle/EntityListener/*Listener.php'
    tags: [ {name: doctrine.orm.entity_listener, lazy: true} ]
  Runalyze\Bundle\CoreBundle\EntityListener\EquipmentUpdateSubscriber:
    tags: [ {name: doctrine.event_subscriber, connection: default, lazy: true} ]

  Runalyze\Bundle\CoreBundle\EventListener\AccountLastActionListener:
    tags: [ {name: kernel.event_listener, event: kernel.controller, method: onCoreController} ]
  Runalyze\Bundle\CoreBundle\EventListener\ConsoleErrorStatusListener:
    tags: [ {name: kernel.event_listener, event: console.terminate} ]
  Runalyze\Bundle\CoreBundle\EventListener\ConsoleExceptionListener:
    tags: [ {name: kernel.event_listener, event: console.exception} ]
  Runalyze\Bundle\CoreBundle\EventListener\LocaleListener:
    tags: [ {name: kernel.event_subscriber} ]
  Runalyze\Bundle\CoreBundle\EventListener\MaintenanceListener:
    lazy: true # TODO: patches the container loading the default configuration list while building the container (ValueExtension)
    tags: [ {name: kernel.event_listener, event: kernel.request, method: onKernelRequest} ]
  Runalyze\Bundle\CoreBundle\EventListener\RecalculationTasksPerformerListener:
    tags: [ {name: kernel.event_listener, event: kernel.terminate, method: onTerminate} ]
  Runalyze\Bundle\CoreBundle\EventListener\TablePrefixSubscriber:
    tags: [ {name: doctrine.event_subscriber} ]
  Runalyze\Bundle\CoreBundle\EventListener\UserLocaleListener:
    tags: [ {name: kernel.event_listener, event: security.interactive_login, method: onInteractiveLogin} ]
  Runalyze\Bundle\CoreBundle\EventListener\UserTimezoneListener:
    tags: [ {name: kernel.event_listener, event: kernel.request, method: onKernelRequest} ]

  Runalyze\Bundle\CoreBundle\Form\Type\ElevationType:
    arguments: ["@app.unit_system.elevation"]

  Runalyze\Bundle\CoreBundle\Queue\Receiver\BackupReceiver:
    public: true
  Runalyze\Bundle\CoreBundle\Queue\Receiver\PosterReceiver:
    public: true
    tags:
      - { name: monolog.logger, channel: queue }

  Runalyze\Bundle\CoreBundle\Repository\:
    resource: '%kernel.project_dir%/src/CoreBundle/Repository/*'
    public: true

  Runalyze\Bundle\CoreBundle\Services\AccountMailer:
    calls: [ [setFrom, ["%mail_sender%", "%mail_name%"]] ]
  Runalyze\Bundle\CoreBundle\Services\Configuration\ConfigurationUpdater:
    lazy: true
  Runalyze\Bundle\CoreBundle\Services\Import\ActivityCache:
    arguments:
      $cache: "@app.cache.activity_uploads"
  Runalyze\Bundle\CoreBundle\Services\Import\ActivityDataContainerFilter:
    tags: [ {name: monolog.logger, channel: activity_uploads} ]
  Runalyze\Bundle\CoreBundle\Services\Import\FileImporter:
    tags: [ {name: monolog.logger, channel: activity_uploads} ]
  Runalyze\DEM\Reader:
    alias: 'Runalyze\Bundle\CoreBundle\Services\Import\GeoTiffReader'
  Runalyze\Bundle\CoreBundle\Services\Import\TimezoneLookup:
    arguments:
      $silentExceptions: true
  Runalyze\Bundle\CoreBundle\Services\Recalculation\RecalculationManager:
    lazy: true
  Runalyze\Bundle\CoreBundle\Services\SessionRequestProcessor:
    tags: [ {name: monolog.processor, method: processRecord} ]

  Runalyze\Bundle\CoreBundle\Tests\DataFixtures\:
    resource: '%kernel.project_dir%/tests/CoreBundle/DataFixtures'

  Runalyze\Metrics\Distance\Unit\AbstractDistanceUnit:
    factory: 'Runalyze\Bundle\CoreBundle\Services\UnitSystemFactory:getDistanceUnit'
  app.unit_system.elevation:
    class: Runalyze\Metrics\Distance\Unit\AbstractDistanceUnit
    factory: 'Runalyze\Bundle\CoreBundle\Services\UnitSystemFactory:getElevationUnit'
  Runalyze\Metrics\Energy\Unit\AbstractEnergyUnit:
    factory: 'Runalyze\Bundle\CoreBundle\Services\UnitSystemFactory:getEnergyUnit'
  Runalyze\Metrics\Temperature\Unit\AbstractTemperatureUnit:
    factory: 'Runalyze\Bundle\CoreBundle\Services\UnitSystemFactory:getTemperatureUnit'
  Runalyze\Metrics\Velocity\Unit\AbstractPaceInDecimalFormatUnit:
    factory: 'Runalyze\Bundle\CoreBundle\Services\UnitSystemFactory:getWindSpeedUnit'
  Runalyze\Metrics\Weight\Unit\AbstractWeightUnit:
    factory: 'Runalyze\Bundle\CoreBundle\Services\UnitSystemFactory:getWeightUnit'

  Runalyze\:
    resource: '%kernel.project_dir%/inc/core/*'

  Runalyze\Service\ElevationCorrection\Strategy\Geonames:
    tags: [ {name: monolog.logger, channel: external_services} ]
  Runalyze\Service\ElevationCorrection\Strategy\GoogleMaps:
    tags: [ {name: monolog.logger, channel: external_services} ]

  Runalyze\Service\WeatherForecast\DatabaseCacheInterface:
    alias: 'Runalyze\Bundle\CoreBundle\Repository\WeathercacheRepository'
  Runalyze\Service\WeatherForecast\Strategy\DarkSky:
    tags: [ {name: monolog.logger, channel: external_services} ]
  Runalyze\Service\WeatherForecast\Strategy\OpenWeatherMap:
    tags: [ {name: monolog.logger, channel: external_services} ]